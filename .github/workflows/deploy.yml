name: Deploy Backend and Frontend

on:
  push:
    branches:
      - main

jobs:
  build-rds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy RDS Files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r ./backend_rds ubuntu@13.51.158.134:/home/ubuntu
      
      - name: Build RDS Image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.51.158.134 << 'EOF'
          cd /home/ubuntu/backend_rds
          docker build -t backend_rds .
          EOF

  build-redis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy Redis Files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r ./backend_redis ubuntu@13.51.158.134:/home/ubuntu

      - name: Build Redis Image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.51.158.134 << 'EOF'
          cd /home/ubuntu/backend_redis
          docker build -t backend_redis .
          EOF

  deploy-backend:
    needs: [build-rds, build-redis]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
      
      - name: Copy Compose File to EC2
        run: |
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ubuntu@13.51.158.134:/home/ubuntu
      
      - name: SSH into EC2 and restart Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.51.158.134 << 'EOF'
          cd /home/ubuntu
          docker-compose down
          docker-compose up -d
          EOF

  sync-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Verify AWS Credentials
        run: |
            echo "Verifying AWS credentials..."
            aws sts get-caller-identity
            
      - name: Sync frontend templates with S3
        run: |
            aws s3 sync ./frontend/templates s3://frontend-static-bucket --delete
        
      - name: Sync config file with S3
        run: |
            aws s3 cp ./frontend/config.json s3://frontend-static-bucket/config.json