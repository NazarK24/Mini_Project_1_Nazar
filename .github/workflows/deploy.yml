name: Deploy Backend and Frontend

on:
  push:
    branches:
      - main

jobs:
  build-push-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 148761653308.dkr.ecr.eu-north-1.amazonaws.com

      - name: Build and Push Docker images
        run: |
          docker build -t backend_rds ./backend_rds
          docker tag backend_rds:latest 148761653308.dkr.ecr.eu-north-1.amazonaws.com/backend_rds:latest
          docker push 148761653308.dkr.ecr.eu-north-1.amazonaws.com/backend_rds:latest

          docker build -t backend_redis ./backend_redis
          docker tag backend_redis:latest 148761653308.dkr.ecr.eu-north-1.amazonaws.com/backend_redis:latest
          docker push 148761653308.dkr.ecr.eu-north-1.amazonaws.com/backend_redis:latest

  deploy-backend:
    needs: build-push-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy Compose File to EC2
        run: |
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ubuntu@${{ vars.EC2_IP_ADDRESS }}:/home/ubuntu


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: SSH into EC2 and restart Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.EC2_IP_ADDRESS }} << 'EOF'
          cd /home/ubuntu
          docker-compose down
          docker-compose pull
          docker-compose up -d
          EOF

  sync-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Sync frontend templates with S3
        run: |
          aws s3 sync ./frontend/templates s3://frontent-static-bucket --delete

      - name: Sync config file with S3
        run: |
          aws s3 cp ./frontend/config.json s3://frontent-static-bucket/config.json

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"